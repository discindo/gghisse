% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilhisse.R
\name{m_rate_recon}
\alias{m_rate_recon}
\title{Plot MuHiSSE model-averaged marginal ancestral state reconstruction for diversification rates}
\usage{
m_rate_recon(processed_muhisse_recon, parameter = "turnover",
  discrete = FALSE, breaks = seq(0, 1, 0.2),
  tree_layout = "rectangular", tree_direction = "right",
  time_axis_ticks = 10, open_angle = 10)
}
\arguments{
\item{processed_muhisse_recon}{An object produced by \code{h_process_recon}}

\item{parameter}{The diversification parameter to be mapped onto the tree. Possible options are turnover, extinct.frac, net.div, speciation, extinction}

\item{discrete}{Logical. Whether to discretize the distribution of reconstructed rates into bins}

\item{breaks}{A numeric vector of cut points for binning the rates. Passed internally to \code{cut}. The function checks whether max(rate) is in this vector and adds it if not.}

\item{tree_layout}{A layout for the tree. Available options are 'rectangular' (default), 'slanted', 'circular', 'fan' and 'radial'.}

\item{tree_direction}{'right' (default), 'left', 'up', or 'down' for rectangular and slanted tree layouts}

\item{time_axis_ticks}{numeric giving the number of ticks for the time axis (default=10)}

\item{open_angle}{The degrees of empty space between the first and last tip. Only works for \code{tree_layout = 'fan'} and allows for a little more space around axis tick labels.}
}
\value{
A plot of the phylogeny with branches colored by hisse-inferred marginal ancestral states.
}
\description{
A function to plot a (model-averaged) marginal ancestral reconstruction for the estimated diversification rates.
}
\examples{

asr <- get(load("data/muhisse_relax_20_recon.Rdata"))
processed_muhisse <- m_process_recon(muhisse_recon=asr)

map_continuous <-
 m_rate_recon(
   processed_muhisse_recon = processed_hisse,
   parameter = "extinction", discrete=FALSE)

# change colors, your can pass the trait name to `name=` to title the colorbar
map_continuous + scale_color_gradient(name="", low = "#132B43", high = "#56B1F7")

map_discrete <-
 m_rate_recon(
   processed_muhisse_recon = processed_hisse,
   parameter = "extinction", discrete=TRUE, breaks=c(0.3, 0.6, 1))

# change colors
map_discrete + scale_color_manual(name="", values = c("red", "blue", "orange", "green"))
}
