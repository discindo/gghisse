% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilhisse.R
\name{m_trait_recon}
\alias{m_trait_recon}
\title{Plot MuHiSSE model-averaged marginal ancestral state reconstruction for the trait with discretized probabilities}
\usage{
m_trait_recon(processed_muhisse_recon, show_tip_label = FALSE,
  cutoff = c(0.2, 0.2), states_of_first_character,
  states_of_second_character, tree_layout = "rectangular",
  tree_direction = "right", time_axis_ticks = 10, open_angle = 10,
  colors = viridis(n = 9))
}
\arguments{
\item{processed_muhisse_recon}{An object produced by \code{m_process_recon}}

\item{cutoff}{A vector of length 2 giving the values for discretizing the reconstructed probabilities for the first and second character. Categories "0", "uncertain", or "1" are assigned to probabilities \code{>= 1-cutoff}, \code{1-cutoff:cutoff}, \code{<=cutoff}. A cutoff=0.5 will result with four categories, essentially ignoring the uncertainty in ancestral state reconstruction. A cutoff < 0.5 will produce a category "uncertain" for probabilities in the range \code{1-cutoff:cutoff}. The function will print a count of the categories after discretizing, so it is possible to adjust the cutoff values to avoid plotting of categories with too few nodes}

\item{states_of_first_character}{Translation for the character states}

\item{states_of_second_character}{Translation for the character states}

\item{tree_layout}{A layout for the tree. Available options are 'rectangular' (default), 'slanted', 'circular', 'fan' and 'radial'.}

\item{tree_direction}{'right' (default), 'left', 'up', or 'down' for rectangular and slanted tree layouts}

\item{time_axis_ticks}{numeric giving the number of ticks for the time axis (default=10). Passed on to \code{pretty} internally, so the number of plotted ticks might not be exactly the same.}

\item{open_angle}{The degrees of empty space between the first and last tip. Only works for \code{tree_layout = 'fan'} and allows for a little more space around axis tick labels.}

\item{colors}{A vector of colors for the character states. Note that the number of categories depends on the cutoff value. Internally this vector of colors is subset to \code{colors[1:number of states]}, so some tinkering might be necessary to get colors that work well together.}

\item{show_tip_labels}{Logical, whether to plot tip labels. Default is FALSE because it is difficult to plot legible tip labels for trees with more than a 100 species. See the example below for a good manual solution.}
}
\value{
A plot of the phylogeny with branches colored by muhisse-inferred marginal ancestral states.
}
\description{
A function to plot a MuHiSSE (model-averaged) marginal ancestral reconstruction for the trait data.
}
\examples{

data("diatoms")
processed_muhisse <- m_process_recon(muhisse_recon=diatoms$muhisse_recon)

# eight categories after binning with a cutoff of 0.2
m_trait_recon(
 processed_muhisse_recon = processed_muhisse,
 cutoff = c(.2, .2),
 states_of_first_character = c("marine", "freshwater"),
 states_of_second_character = c("plankton", "benthos"),
 tree_layout = "radial",
 colors = viridis(7,option = "E", direction = 1, end=.9))

# three of these eight have < 3 nodes, so we could try to avoid plotting some of them
# adjust the cutoff for the second variable

m_trait_recon(
 processed_muhisse_recon = processed_muhisse,
 cutoff = c(.2, .3),
 states_of_first_character = c("marine", "freshwater"),
 states_of_second_character = c("plankton", "benthos"),
 tree_layout = "radial",
 colors = viridis(7,option = "E", direction = 1, end=.9))

# ignoring uncertainty
m_trait_recon(
 processed_muhisse_recon = processed_muhisse,
 cutoff = c(.5, .5),
 states_of_first_character = c("marine", "freshwater"),
 states_of_second_character = c("plankton", "benthos"),
 tree_layout = "radial",
 colors = viridis(7,option = "E", direction = 1, end=.9)[c(1,3,5,7)])



#'# Plotting tip labels
# most likely you would need to use show_tip_label = FALSE
# and add the tip labels manually
# for better control over font size, justification, alignment, and offset
# for example

require("ape")
data("diatoms")
x <- m_process_recon(diatoms$`3state_musse_recon`)

# the defaults work poorly
m_trait_recon(processed_muhisse_recon = x,
 show_tip_label = TRUE,
 states_of_first_character = c("0", "1"),
 states_of_second_character = c("0", "1"))

# manual setup is better
basic_plot <-
 m_trait_recon(
 processed_muhisse_recon = x,
 show_tip_label = FALSE,
 states_of_first_character = c("0", "1"),
 states_of_second_character = c("0", "1"),
 time_axis_ticks = 8
)

# extract the data component from the ggplot object
# we'll need it to order the tip labels
plot_data <- basic_plot$data \%>\%
 filter(isTip == TRUE) \%>\% # we need the tips only, no nodes
 arrange(y) # sort numerically

basic_plot +
 #now add an axis to the right
 scale_y_continuous(position = "right",
                    breaks = plot_data$y,
                    labels = plot_data$label) +
 # enable the axis text, but disable the line and ticks marks
 # move the legend out of the way
 theme(
   legend.position = "top",
   axis.ticks.y = element_blank(),
   axis.line.y = element_blank(),
   axis.text.y = element_text(face = "italic")
 )

}
