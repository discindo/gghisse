% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilhisse.R
\name{h_dotplot}
\alias{h_dotplot}
\title{Plot diversification rates estimated by a HiSSE model with means and standard deviations across tips}
\usage{
h_dotplot(processed_hisse_recon, parameter = "turnover",
  x_labels = c("Marine", "Freshwater"), bin_width = 0.1, paint_colors,
  plot_as_waiting_time = TRUE)
}
\arguments{
\item{processed_hisse_recon}{An object produced by \code{h_process_recon}}

\item{parameter}{The diversification parameter to be plotted on the y axis. Possible options are turnover, extinct.frac, net.div, speciation, extinction}

\item{x_labels}{A character vector of length two giving the labels for the x axis tick marks. This is usually the binary trait whose assosiation with diversification is being tested. The replacement for `0` should be first, e.g., `c("0"="Plankton", "1"="Benthos").}

\item{bin_width}{The width of bins for the dotplot. Treat this as any histogram. Testing several different bin width values is recommended.}

\item{paint_colors}{Colors for the points in the two alternate states}

\item{plot_as_waiting_time}{Whether to plot the rates or their inverse (waiting times)}
}
\value{
A dotplot of tip-associated rates (possibly model averaged).
}
\description{
A function to plot a dotplot of (model-averaged) diversification rates in the alternative states. We can change the rate plotted on the y axis and modify the label for the x-axis (your binary 0/1 trait). Further modifications are straightforward with ggplot (see examples).
}
\examples{

asr <- get(load("data/hab.cid4.recon.Rsave"))
processed_hisse <- h_process_recon(hisse_recon=asr)
paint_cols <- c("orange", "violet")

h_dotplot(
  processed_hisse_recon = processed_hisse,
  parameter = "turnover",
  x_labels = c("Plankton", "Benthos"),
  bin_width = 0.3,
  paint_colors=paint_cols[1:2],
  plot_as_waiting_time = TRUE
) + labs(x = "", y = "waiting time (My)", title = "Turnover")

# see ?h_plot_rates_states for examples for modifying the graph using ggplot2
}
